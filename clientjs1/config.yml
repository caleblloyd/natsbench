---
intro: |-
  Like the [client protocol](/ref/protocols/client), the standard way of leveraging
  JetStream-based functionality is to use a [client SDK](/download/clients) for
  your preferred programming language.

  However, one important difference is that the JetStream protocol is built on top of
  the standard client protocol, using standard pub-sub interactions between the client
  and server.

overview: |-
  All JetStream operations are _account-scoped_. There are some operations which must
  be performed by a user within the _system account_ rather than host account. This is
  noted by the `System Account: true` flag.

sections:
  - title: Account
    summary: Account-specific operations.
    description: |-

    endpoints:
      - name: Info
        subject: $JS.API.INFO
        description: |-
          Retrieves stats and limits for the connected user's account.
        response_schema: jetstream/api/v1/account_info_response.json

      - name: Purge data
        subject: $JS.API.ACCOUNT.PURGE
        system_account: true
        description: |-
          Initiates a purge for all stream data in the connected user's account.
        response_schema: jetstream/api/v1/account_purge_response.json

  - title: Stream API
    summary: Operations pertaining to streams.
    description: |-
    endpoints:
      - name: List stream names
        subject: $JS.API.STREAM.NAMES
        description: |-
          Paginated list of stream names.
        request_schema: jetstream/api/v1/stream_names_request.json
        response_schema: jetstream/api/v1/stream_names_response.json

      - name: List streams
        subject: $JS.API.STREAM.LIST
        description: |-
          Paginated list known streams including their current configuration and state.
        request_schema: jetstream/api/v1/stream_list_request.json
        response_schema: jetstream/api/v1/stream_list_response.json

      - name: Create stream
        subject: $JS.API.STREAM.CREATE.{stream}
        description: |-
          Create a stream with the provided configuration.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_create_request.json
        response_schema: jetstream/api/v1/stream_create_response.json

      - name: Update stream
        subject: $JS.API.STREAM.UPDATE.{stream}
        description: |-
          Update a stream with the provided configuration.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_update_request.json
        response_schema: jetstream/api/v1/stream_update_response.json

      - name: Delete stream
        subject: $JS.API.STREAM.DELETE.{stream}
        description: |-
          Delete a stream.
        params:
          stream: Stream name
        response_schema: jetstream/api/v1/stream_delete_response.json

      - name: Purge stream data
        subject: $JS.API.STREAM.PURGE.{stream}
        description: |-
          Purge messages in the stream. The request payload provides a way to choose
          which messages to purge.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_purge_request.json
        response_schema: jetstream/api/v1/stream_purge_response.json

      - name: Delete stream message
        subject: $JS.API.STREAM.MSG.DELETE.{stream}
        description: |-
          Delete a specific message in the stream by sequence.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_msg_delete_request.json
        response_schema: jetstream/api/v1/stream_msg_delete_response.json

      - name: Get stream message
        subject: $JS.API.STREAM.MSG.GET.{stream}
        description: |-
          Get a specific message in the stream by sequence or the latest by subject.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_msg_get_request.json
        response_schema: jetstream/api/v1/stream_msg_get_response.json

      - name: Direct get stream message
        subject: $JS.API.DIRECT.GET.{stream}
        description: |-
          Get a specific message in the stream by sequence or the latest by subject.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_msg_get_request.json
        response_schema: jetstream/api/v1/stream_msg_get_response.json

      - name: Get stream info
        subject: $JS.API.STREAM.INFO.{stream}
        description: |-
          Get the current configuration and state of the stream.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_info_request.json
        response_schema: jetstream/api/v1/stream_info_response.json

      - name: Initiate stream backup
        subject: $JS.API.STREAM.SNAPSHOT.{stream}
        description: |-
          Initiates a backup of a stream.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_snapshot_request.json
        response_schema: jetstream/api/v1/stream_snapshot_response.json

      - name: Initiate stream restore
        subject: $JS.API.STREAM.RESTORE.{stream}
        description: |-
          Initiates a restore of a stream.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/stream_restore_request.json
        response_schema: jetstream/api/v1/stream_restore_response.json

      - name: Create stream template
        subject: $JS.API.STREAM.TEMPLATE.CREATE.{name}
        deprecation: |-
          Templates are no longer recommended.
        params:
          name: Template name
        description: |-
          Create a stream template.
        request_schema: jetstream/api/v1/stream_template_create_request.json
        response_schema: jetstream/api/v1/stream_template_create_response.json

      - name: Delete stream template
        subject: $JS.API.STREAM.TEMPLATE.DELETE.{name}
        deprecation: |-
          Templates are no longer recommended.
        params:
          name: Template name
        description: |-
          Delete a stream template.
        response_schema: jetstream/api/v1/stream_template_delete_response.json

      - name: Stream template info
        subject: $JS.API.STREAM.TEMPLATE.INFO.{name}
        deprecation: |-
          Templates are no longer recommended.
        params:
          name: Template name
        description: |-
          Info about a stream template.
        response_schema: jetstream/api/v1/stream_template_info_response.json

      - name: List stream template names
        subject: $JS.API.STREAM.TEMPLATE.NAMES
        deprecation: |-
          Templates are no longer recommended.
        description: |-
          Paginated list of stream template names.
        request_schema: jetstream/api/v1/stream_template_names_request.json
        response_schema: jetstream/api/v1/stream_template_names_response.json

      - name: Remove peer from clustered stream
        subject: $JS.API.STREAM.PEER.REMOVE.{stream}
        description: |-
          Remove a server from a clustered stream and its consumers.
        request_schema: jetstream/api/v1/stream_remove_peer_request.json
        response_schema: jetstream/api/v1/stream_remove_peer_response.json

      - name: Stepdown leader for a clustered stream
        subject: $JS.API.STREAM.LEADER.STEPDOWN.{stream}
        description: |-
          Force the current stream Raft leader to stepdown for another
          peer to take over.
        response_schema: jetstream/api/v1/stream_leader_stepdown_response.json

      - name: Move stream
        subject: $JS.API.ACCOUNT.STREAM.MOVE.{stream}.{??}
        system_account: true
        description: |-
          Moves a stream off the current set of servers.
        request_schema:
        response_schema:

      - name: Cancel move stream
        subject: $JS.API.ACCOUNT.STREAM.CANCEL_MOVE.{stream}.{??}
        system_account: true
        description: |-
          Cancels moving of a stream.
        request_schema:
        response_schema:

      - name: Publish Ack
        subject: _INBOX.*.*.*
        description: |-
          The acknowledgement returned to the client publisher when
          a stream successfully stores a message.
        response_schema: jetstream/api/v1/pub_ack_response.json

  - title: Consumer API
    summary: Operations pertaining to consumers.
    description: |-
    endpoints:
      - name: List consumers
        subject: $JS.API.CONSUMER.LIST.{stream}
        description: |-
          Paginated list of consumers including their current configuration and state.
        request_schema: jetstream/api/v1/consumer_list_request.json
        response_schema: jetstream/api/v1/consumer_list_response.json

      - name: List consumer names
        subject: $JS.API.CONSUMER.NAMES.{stream}
        description: |-
          Paginated list of consumer consumers.
        request_schema: jetstream/api/v1/consumer_names_request.json
        response_schema: jetstream/api/v1/consumer_names_response.json

      - name: Create ephemeral consumer
        subject: $JS.API.CONSUMER.CREATE.{stream}
        deprecation: |-
          This service is deprecated in favor of the `DURABLE` form
          since the only distinction between an ephemeral and durable
          consumer is the default activity threshold.
        description: |-
          Create an ephemeral consumer.
        params:
          stream: Stream name
        request_schema: jetstream/api/v1/consumer_create_request.json
        response_schema: jetstream/api/v1/consumer_create_response.json

      - name: Create consumer
        subject: $JS.API.CONSUMER.DURABLE.CREATE.{stream}.{consumer}
        description: |-
          Create a durable consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        request_schema: jetstream/api/v1/consumer_create_request.json
        response_schema: jetstream/api/v1/consumer_create_response.json

      - name: Create consumer (v2)
        subject: $JS.API.CONSUMER.CREATE.{stream}.{consumer}.{filter}
        description: |-
          Create a durable consumer.
        params:
          stream: Stream name
          consumer: Consumer name
          filter: Consumer subject filter
        request_schema: jetstream/api/v1/consumer_create_request.json
        response_schema: jetstream/api/v1/consumer_create_response.json

      - name: Delete consumer
        subject: $JS.API.CONSUMER.DELETE.{stream}.{consumer}
        description: |-
          Delete a consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        response_schema: jetstream/api/v1/consumer_delete_response.json

      - name: Get consumer info
        subject: $JS.API.CONSUMER.INFO.{stream}.{consumer}
        description: |-
          Get the current configuration and state of a consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        response_schema: jetstream/api/v1/consumer_info_response.json

      - name: Pull next messages
        subject: $JS.API.CONSUMER.MSG.NEXT.{stream}.{consumer}
        description: |-
          Get the next batch of messages from a pull consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        request_schema: jetstream/api/v1/consumer_getnext_request.json

      - name: Stepdown leader for a clustered consumer
        subject: $JS.API.CONSUMER.LEADER.STEPDOWN.{stream}.{consumer}
        description: |-
          Force the current consumer Raft leader to stepdown for another
          peer to take over.
        response_schema: jetstream/api/v1/consumer_leader_stepdown_response.json

      - name: Push consumer flow control
        subject: $JS.FC.>
        description: |-
        request_schema:
        response_schema:

      - name: Message ack
        subject: $JS.ACK.{}
        description: |-
          The subject for a client to acknowledge receipt of a message.
        request_schema:
        response_schema:

  - title: Meta API
    summary: JetStream meta layer API.
    description: |-
    endpoints:
      - name: Leader stepdown
        subject: $JS.API.META.LEADER.STEPDOWN
        system_account: true
        description: |-
          Force the current meta Raft leader to stepdown for another peer
          to take over.
        request_schema: jetstream/api/v1/meta_leader_stepdown_request.json
        response_schema: jetstream/api/v1/meta_leader_stepdown_response.json

      - name: Remove server
        subject: $JS.API.SERVER.REMOVE
        system_account: true
        description: |-
          Remove a server as a peer in the JetStream meta group.
        request_schema: jetstream/api/v1/meta_server_remove_request.json
        response_schema: jetstream/api/v1/meta_server_remove_response.json

  - title: Advisory events
    summary: Published notifications for significant events.
    description: |-
    endpoints:
      - name: API Access
        subject: $JS.EVENT.ADVISORY.API
        description: |-
          A notification when the JetStream API is accessed.
        schema: jetstream/advisory/v1/api_audit.json

      - name: Message reached max deliveries
        subject: $JS.EVENT.ADVISORY.CONSUMER.MAX_DELIVERIES.{stream}.{consumer}
        description: |-
          A notification when a message exceeds its delivery threshold
          for a given consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        schema: jetstream/advisory/v1/max_deliver.json

      - name: Message negatively acknowledged (NAK)
        subject: $JS.EVENT.ADVISORY.CONSUMER.MSG_NAKED.{stream}.{consumer}
        description: |-
          A notification published when a message has been negatively acknowledged
          for a given consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        schema: jetstream/advisory/v1/nak.json

      - name: Message terminated (TERM)
        subject: $JS.EVENT.ADVISORY.CONSUMER.MSG_TERMINATED.{stream}.{consumer}
        description: |-
          A notification published when a message has been terminated
          for a given consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        schema: jetstream/advisory/v1/terminated.json

      - name: Stream created
        subject: $JS.EVENT.ADVISORY.STREAM.CREATED.{stream}
        description: |-
          A notification when a stream is created.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/stream_action.json

      - name: Stream deleted
        subject: $JS.EVENT.ADVISORY.STREAM.DELETED.{stream}
        description: |-
          A notification when a stream is deleted.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/stream_action.json

      - name: Stream updated
        subject: $JS.EVENT.ADVISORY.STREAM.UPDATED.{stream}
        description: |-
          A notification when a stream is updated.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/stream_action.json

      - name: Consumer created
        subject: $JS.EVENT.ADVISORY.CONSUMER.CREATED.{stream}.{consumer}
        description: |-
          A notification when a consumer is created.
        params:
          stream: Stream name
          consumer: Consumer name
        schema: jetstream/advisory/v1/consumer_action.json

      - name: Consumer deleted
        subject: $JS.EVENT.ADVISORY.CONSUMER.DELETED.{stream}.{consumer}
        description: |-
          A notification when a consumer is deleted.
        params:
          stream: Stream name
          consumer: Consumer name
        schema: jetstream/advisory/v1/consumer_action.json

      - name: Stream snapshot created
        subject: $JS.EVENT.ADVISORY.STREAM.SNAPSHOT_CREATE.{stream}
        description: |-
          A notification when a stream snapshot has been created. Note, the snapshot
          process is asynchronous, so the see the `SNAPSHOT_COMPLETE` advisory.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/snapshot_create.json

      - name: Stream snapshot completed
        subject: $JS.EVENT.ADVISORY.STREAM.SNAPSHOT_COMPLETE.{stream}
        description: |-
          A notification when a stream snapshot has been completed.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/snapshot_complete.json

      - name: Stream restore created
        subject: $JS.EVENT.ADVISORY.STREAM.RESTORE_CREATE.{stream}
        description: |-
          A notification when a stream restore has been created. Note, the restore
          process is asynchronous, so the see the `RESTORE_COMPLETE` advisory.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/restore_create.json

      - name: Stream restore completed
        subject: $JS.EVENT.ADVISORY.STREAM.RESTORE_COMPLETE.{stream}
        description: |-
          A notification when a stream restore has been completed.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/restore_complete.json

      - name: Stream leader elected
        subject: $JS.EVENT.ADVISORY.STREAM.LEADER_ELECTED.{stream}
        description: |-
          A notification when a leader is elected for a replicated stream.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/stream_leader_elected.json

      - name: Stream quorum lost
        subject: $JS.EVENT.ADVISORY.STREAM.QUORUM_LOST.{stream}
        description: |-
          A notification when qourum is lost for a replicated stream.
        params:
          stream: Stream name
        schema: jetstream/advisory/v1/stream_quorum_lost.json

      - name: Consumer leader elected
        subject: $JS.EVENT.ADVISORY.CONSUMER.LEADER_ELECTED.{stream}.{consumer}
        description: |-
          A notification when a leader is elected for a replicated consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        schema: jetstream/advisory/v1/consumer_leader_elected.json

      - name: Consumer quorum lost
        subject: $JS.EVENT.ADVISORY.CONSUMER.QUORUM_LOST.{stream}.{consumer}
        description: |-
          A notification when qourum is lost for a replicated consumer.
        params:
          stream: Stream name
          consumer: Consumer name
        schema: jetstream/advisory/v1/consumer_quorum_lost.json

      - name: Server out of storage
        subject: $JS.EVENT.ADVISORY.SERVER.OUT_OF_STORAGE
        description: |-
          A notification that a server has no more storage available.
        schema: jetstream/advisory/v1/server_out_of_space.json

      - name: Server removed
        subject: $JS.EVENT.ADVISORY.SERVER.REMOVED
        description: |-
          A notification that a server has been removed from the system.
        schema: jetstream/advisory/v1/server_removed.json

  - title: Metrics
    summary: Published metrics.
    description: |-
    endpoints:
      - name: Consumer ack info
        subject: $JS.EVENT.METRIC.CONSUMER.ACK.{stream}.{consumer}
        description: |-
          A published metric when a message was acknowledged to a consumer with
          Ack Sampling enabled.
        params:
          stream: Stream name
          consumer: Consumer name
        schema: jetstream/metric/v1/consumer_ack.json